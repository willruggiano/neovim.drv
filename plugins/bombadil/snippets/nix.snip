snippet modprog
  {
    config,
    lib,
    pkgs,
    ...
  }:
  with lib; let
    cfg = config.programs.$1;
  in {
    options.programs.$1 = {
      enable = mkEnableOption "Enable $1";
    };

    config = mkIf cfg.enable {
      ${0:${VISUAL}}
    };
  }

snippet systemd
  systemd.user.services.$1 = {
    description = "$2";
    wantedBy = ["$3"];
    partOf = ["$4"];
    serviceConfig = {
      ExecStart = "$5";
      Restart = "${6:always}";
    };
  };

snippet flake
  {
    inputs = {
      nixpkgs.url = "github:nixos/nixpkgs/nixpkgs-unstable";
      pre-commit.url = "github:cachix/pre-commit-hooks.nix";
      utils.url = "github:gytis-ivaskevicius/flake-utils-plus";
    };

    outputs = {
      self,
      nixpkgs,
      utils,
      ...
    } @ inputs:
      utils.lib.eachDefaultSystem (system: let
        pkgs = import nixpkgs {
          inherit system;
        };
      in {
        checks = {
          pre-commit = inputs.pre-commit.lib."${system}".run {
            src = ./.;
            hooks = {
              alejandra.enable = true;
            };
          };
        };

        devShells.default = pkgs.mkShell {
          name = "${1}";
          nativeBuildInputs = with pkgs; [${2}];
          inherit (self.checks."${system}".pre-commit) shellHook;
        };
      });
  }
